
name: Build and Publish

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main  # Ensure we are checking out the main branch
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version in package.json
        run: |
          VERSION=${{ github.ref#refs/tags/v }}
          echo "Updating package.json version to $VERSION"
          jq --arg new_version "$VERSION" '.version = $new_version' package.json > package.tmp.json && mv package.tmp.json package.json
          cat package.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Yarn build
        run: yarn build

      - name: Create new branch, commit and push changes
        run: |
          NEW_BRANCH="release-${{ github.ref#refs/tags/ }}"
          git checkout -b $NEW_BRANCH
          git add .
          git commit -m "chore(release): update version to $VERSION"
          git push origin $NEW_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up NPM auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        run: yarn publish --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Pull Request
        id: create_pull_request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(release): update version to $VERSION"
          branch: $NEW_BRANCH
          base: main
          title: "Release $VERSION"
          body: "This PR updates the version to $VERSION"

      - name: Merge Pull Request
        uses: actions/github-script@v5
        with:
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.create_pull_request.outputs.pull_request_number }},
              merge_method: 'squash'
            });

      - name: Delete temporary branch
        if: success()
        run: |
          git push origin --delete $NEW_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
