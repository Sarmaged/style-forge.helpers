name: Rebuild and Publish

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: yarn install

      - name: Update version in package.json
        run: |
          NEW_VERSION=${GITHUB_REF#refs/tags/v}
          jq --arg new_version "$NEW_VERSION" '.version = $new_version' package.json > temp.json && mv temp.json package.json

      - name: Configure Git
        run: |
          git config --global user.email "sarmaged@gmail.com"
          git config --global user.name "Sarmaged"

      - name: Create and push new branch
        run: |
          BRANCH_NAME=auto-update-${GITHUB_REF#refs/tags/v}
          git checkout -b $BRANCH_NAME
          git add package.json yarn.lock
          git commit -m "Update version to ${GITHUB_REF#refs/tags/v} and upgrade dependencies"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: Update version to ${GITHUB_REF#refs/tags/v} and upgrade dependencies
          branch: $BRANCH_NAME
          title: Update version to ${GITHUB_REF#refs/tags/v}
          body: This PR updates the version to ${GITHUB_REF#refs/tags/v} and upgrades dependencies.

      - name: Build the package
        run: yarn build

      - name: Publish to npm
        if: github.ref == 'refs/heads/main'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          yarn publish --new-version ${GITHUB_REF#refs/tags/v}

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes
            - Updated to version ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
